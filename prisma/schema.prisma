// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                     String                  @id @default(uuid())
  name                   String
  priceInCents           Int
  filePath               String
  imagePath              String
  description            String
  isAvailableForPurchase Boolean                 @default(true)
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  orders                 Order[]
  DownloadVerifications  DownloadVerifications[]

  DiscountCode DiscountCode[]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id               String   @id @default(uuid())
  pricePaidInCents Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  userId    String
  productId String
  // Relationships

  // If user is deleted, delete the order as well
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // if product is deleted, restrict the deletion if a previous order exists
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict)

  // if discount code is deleted, restrict the deletion if a previous order exists
  discountCodeId String
  DiscountCode   DiscountCode? @relation(fields: [discountCodeId], references: [id], onDelete: Restrict)
}

model DownloadVerifications {
  id        String   @id @default(uuid())
  expiresAt DateTime
  createdAt DateTime @default(now())

  productId String
  // Relationships
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model DiscountCode {
  id            String           @id @default(uuid())
  code          String           @unique
  discountAmout Int
  discountType  DiscountCodeType
  uses          Int              @default(0)
  isActive      Boolean          @default(true)
  allProducts   Boolean          @default(false)
  createdAt     DateTime         @default(now())
  limit         Int?
  expiresAt     DateTime?

  products Product[]
  orders   Order[]
}

enum DiscountCodeType {
  PERCENTAGE
  FIXED
}
